<?php

namespace FormBundle\Entity;

use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Component\HttpFoundation\File\File;
use Doctrine\ORM\Mapping as ORM;

/**
 * Formations
 */
class Formations
{


    // UPLOAD
    /**
     * @var file
     */
    public $file;
    public $file2;

    protected function getUploadDir()
    {
        return '/formations_documents';
    }

    public function getFixturesPath()
    {
        return $this->getAbsolutePath() . 'web/uploads/formations_documents/fixtures/';
    }


    /**
     * @ORM\PrePersist
     */
    public function preUpload()
    {
        if (null !== $this->file) {
            // do whatever you want to generate a unique name
            $this->fichier_nom = $this->file->getClientOriginalName();
            $this->fichier = uniqid().'.'.$this->file->guessExtension();
        }

        if (null !== $this->file2) {
            // do whatever you want to generate a unique name
            $this->second_fichier_nom = $this->file2->getClientOriginalName();
            $this->second_fichier = uniqid().'.'.$this->file2->guessExtension();
        }
    }

    /**
     * @ORM\PostPersist
     */
    public function upload()
    {
        if (null === $this->file) {
            return;
        } else {
            $this->file->move(__DIR__.'/../../../app/uploads'.$this->getUploadDir(), $this->fichier);
            unset($this->file);
        }

        if (null === $this->file2) {
            return;
        } else {
            $this->file2->move(__DIR__.'/../../../app/uploads'.$this->getUploadDir(), $this->second_fichier);
            unset($this->file2);
        }
    }

    /**
     * @ORM\PostRemove
     */
    public function removeUpload()
    {
        if ($file = null === $this->fichier ? null : __DIR__.'/../../../app/uploads'.$this->getUploadDir().'/'.$this->fichier) {
            unlink($file);
        }
        if ($file2 = null === $this->fichier ? null : __DIR__.'/../../../app/uploads'.$this->getUploadDir().'/'.$this->fichier) {
            unlink($file2);
        }
    }
    //


    protected $type = 'Formations';


    public function getType(){
        return $this->type;
    }

    // GENERATED CODE

}
